pipeline {
    agent any
    environment {
        APP_DIR = 'demo-app/'               // Directory of the application
        TOMCAT_WEBAPPS = '/usr/local/tomcat/webapps/'  // Tomcat webapps directory
        TOMCAT_USER = 'tomcat'              // SSH user for Tomcat servers
        WAR_FILE = 'demo-app.war'           // Name of the WAR file to deploy
    }
    stages {
        stage('Process Branches') {
            steps {
                script {
                    def branches = ['main', 'dev', 'prod']
                    for (branch in branches) {
                        echo "Processing branch: ${branch}"
                        
                        // Checkout branch
                        checkout([$class: 'GitSCM',
                                  branches: [[name: "origin/${branch}"]],
                                  userRemoteConfigs: [[url: 'https://github.com/<your-repo>.git']]])

                        echo "Building branch: ${branch}"
                        
                        dir("${APP_DIR}") {
                            sh 'mvn clean package'
                        }

                        echo "Deploying branch: ${branch}"
                        
                        def tomcatConfig = [:]
                        if (branch == 'dev') {
                            tomcatConfig.host = '172.18.0.4'
                            tomcatConfig.sshPort = '2223'
                        } else if (branch == 'prod') {
                            tomcatConfig.host = '172.18.0.5'
                            tomcatConfig.sshPort = '2224'
                        } else if (branch == 'main') {
                            tomcatConfig.host = '172.18.0.3'
                            tomcatConfig.sshPort = '2222'
                        } else {
                            echo "Branch ${branch} is not configured for deployment."
                            continue
                        }

                        sshagent(['tomcat-ssh']) {
                            sh """
                                ssh -p ${tomcatConfig.sshPort} ${TOMCAT_USER}@${tomcatConfig.host} 'mkdir -p ${TOMCAT_WEBAPPS}'
                                scp -P ${tomcatConfig.sshPort} ${APP_DIR}/target/${WAR_FILE} ${TOMCAT_USER}@${tomcatConfig.host}:${TOMCAT_WEBAPPS}
                                ssh -p ${tomcatConfig.sshPort} ${TOMCAT_USER}@${tomcatConfig.host} '/usr/local/tomcat/bin/shutdown.sh || true'
                                ssh -p ${tomcatConfig.sshPort} ${TOMCAT_USER}@${tomcatConfig.host} '/usr/local/tomcat/bin/startup.sh'
                            """
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Pipeline execution completed."
        }
    }
}
